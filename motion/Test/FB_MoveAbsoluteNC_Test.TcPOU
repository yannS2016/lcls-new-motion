<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_MoveAbsoluteNC_Test" Id="{dc41a27c-ab9f-47fb-bcb5-3fed2b1c906b}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MoveAbsoluteNC_Test EXTENDS FB_TestSuite
VAR

    fbMyAxisRef_Test1 : AXIS_REF;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[GivenThatWeStartMoveAbsoluteExpectToBeDoneAndRetainDone_Test1();]]></ST>
    </Implementation>
    <Method Name="GivenThatWeStartMoveAbsoluteExpectToBeDoneAndRetainDone_Test1" Id="{d6224050-ec2d-4785-a811-d10c9555be8b}">
      <Declaration><![CDATA[METHOD PRIVATE GivenThatWeStartMoveAbsoluteExpectToBeDoneAndRetainDone_Test1
VAR_INST
    fbTestTimer : TON := (PT := T#5S, IN := TRUE);
    // Subject under test
    fbMoveAbsoluteNC : FB_MoveAbsoluteNC(AxisRef := fbMyAxisRef_Test1);
    mcPower : MC_Power;

    nTestStateStep : INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST(__POUNAME());
fbTestTimer();
fbMoveAbsoluteNC();

CASE nTestStateStep OF
    0 :
        mcPower(Axis := fbMyAxisRef_Test1,
                Enable := TRUE,
                Enable_Positive := TRUE,
                Enable_Negative := TRUE,
                Override := 100);
        IF mcPower.Status THEN
            nTestStateStep := nTestStateStep + 1;
        END_IF

    1 :
        fbMoveAbsoluteNC.MoveAbsolute(Position := 100,
                                      Velocity := 50,
                                      Acceleration := 50,
                                      Deceleration := 50);
        nTestStateStep := nTestStateStep + 1;

    2 :
        // Do nothing
END_CASE

IF fbTestTimer.Q THEN
    AssertTrue(Condition := fbMoveAbsoluteNC.Done,
               Message := 'Expected done');
    AssertFalse(Condition := fbMoveAbsoluteNC.Busy,
                Message := 'Expected not busy');

    TEST_FINISHED();
END_IF
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>